{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","onSubmit","valueName","valueNumber","onNameChange","onNumberChange","type","Persons","persons","onClick","map","person","name","number","id","Notification","messageObject","style","isError","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","message","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","setMessageObject","updatePersons","personService","initialPersons","useEffect","clearInput","showMessage","setTimeout","filteredPersons","filter","toLowerCase","indexOf","event","target","preventDefault","some","window","confirm","replacingPerson","find","replacedPerson","returnedPerson","catch","error","concat","deletingPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7833161.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({value, onChange}) => {\n  return (\n    <div>\n      filter shown with <input value={value} onChange={onChange}/>\n    </div>\n  )\n}\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({onSubmit, valueName, valueNumber, onNameChange, onNumberChange}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={valueName} onChange={onNameChange}/>\n      </div>\n      <div>\n        number: <input value={valueNumber} onChange={onNumberChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({persons, onClick}) => {\n  return (\n    <div>\n      {persons.map((person) => <p key={person.id}>\n        {person.name} {person.number}\n        <button onClick={() => onClick(person)}>delete</button>\n      </p>)}\n    </div>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({messageObject}) => {\n  const successStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  const errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  if (messageObject === null) {\n    return null\n  }\n\n  return (\n    <div style={messageObject.isError ? errorStyle : successStyle}>\n      {messageObject.message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\n\nconst replace = newObject => {\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, replace }\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ messageObject, setMessageObject ] = useState(null)\n\n  const updatePersons = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(updatePersons, [])\n\n  const clearInput = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const showMessage = (messageObject) => {\n    setMessageObject(messageObject)\n    setTimeout(() => {\n      setMessageObject(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.some((person) => person.name === newName)) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const replacingPerson = persons.find((person) => person.name === newName)\n        const replacedPerson = {...replacingPerson, number: newNumber}\n        personService\n          .replace(replacedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person =>\n              person.id !== returnedPerson.id ? person : returnedPerson\n            ))\n            showMessage({message:`Changed ${returnedPerson.name}`, isError: false})\n            clearInput()\n          })\n          .catch(error => {\n            updatePersons()\n            showMessage({message:error.response.data.error, isError: true})\n          })\n      }\n    } else {\n      const newPerson = {name: newName, number: newNumber }\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          showMessage({message:`Added ${returnedPerson.name}`, isError: false})\n          clearInput()\n        })\n        .catch(error => {\n          showMessage({message:error.response.data.error, isError: true})\n        })\n    }\n  }\n\n  const deletePerson = (deletingPerson) => {\n    if(window.confirm(`Delete ${deletingPerson.name}`)){\n    personService\n      .remove(deletingPerson.id)\n      .then(() => {\n        setPersons(persons.filter((person) => person.id !== deletingPerson.id))\n        showMessage({message:`Deleted ${deletingPerson.name}`, isError: false})\n      })\n    }\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filteredPersons = persons.filter((person) => person.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification messageObject={messageObject} />\n      <Filter value={filterName} onChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm onSubmit={addPerson} valueName={newName} onNameChange={handleNameChange}\n        valueNumber={newNumber} onNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} onClick={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}